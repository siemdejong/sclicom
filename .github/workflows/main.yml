name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: OS ${{ matrix.os }}, Python ${{ matrix.python-version }} tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9"]
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: dpat
          use-mamba: true
      - name: Get Date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache Conda env
        uses: actions/cache@v2
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{ matrix.os }}--${{ matrix.arch }}--${{
            steps.get-date.outputs.today }}-${{
            hashFiles('environment.yml') }}-${{
            env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache
      - name: Update environment
        run:
          mamba env update -n dpat -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov mypy coverage
          python -m pip install -e .
      - uses: isort/isort-action@master
      - uses: psf/black@stable
      - name: Test with pytest
        run: pytest --cov=./ --cov-report=xml
      - name: Test typing
        run: mypy dpat
      # - uses: actions/checkout@master
      # - uses: codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
      #     files: ./coverage.xml # optional
      #     flags: unittests # optional
      #     name: codecov # optional
      #     fail_ci_if_error: true # optional (default = false)
      #     verbose: true # optional (default = false)

  release:
    needs: test
    runs-on: ubuntu-latest
    concurrency: release

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}