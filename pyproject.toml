[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dpat"
version = "5.1.0"
authors = [
  {name="Siem de Jong", email="siem.dejong@hotmail.nl"},
]
description = "Deep Learning for Pathology on Higher Harmonic Generation Microscopy Images"
keywords = ["AI", "pathology", "HHG"]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10,<3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Unix",
    # "Topic :: Documentation :: Sphinx",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Physics",
    "Typing :: Typed",
]
dependencies = [
    # There is a bug with the jsonargparse that will otherwise be installed...
    "jsonargparse@git+https://github.com/omni-us/jsonargparse#egg=master", # For parsing jsonlike config files.
    # The siemdejong fork of dlup includes the entropy_masker.
    "dlup@git+https://github.com/siemdejong/dlup@entropy_masker", # For tiling input images.
    "scikit-learn >= 0.24", # For creating stratified splits.
    "click", # For creating a CLI.
    "lightning[extra]>=2", # For structuring Pytorch.
    "torch>=2", # For autodifferentiation.
    "lightly", # For self supervised learning.
    "pandas", # For storing data at runtime and
    "tensorboard", # For training monitoring.
    "h5py", # For storing intermediate features and output.
    "pytorchcv", # For using prebuilt models.
    "optuna", # For hyperparameter search.
    "ray[tune]", # For (distributed) hyperparameter search/training.
    "transformers",  # For creating text embeddings.
    "pyprg@git+https://github.com/siemdejong/prg#egg=pyprg&subdirectory=Python_package",  # To calculate the Precision-Recall-Gain curve.
    "pyvips",
]

[project.optional-dependencies]
nb = [
    "ipywidgets", # For using widgets in ipython notebooks.
    "geojson", # For reading in GeoJSON files.
    "rasterio", # For rasterizing shapes.
    "LovelyPlots",  # For lovely plots.
    "pyimq@git+https://github.com/siemdejong/pyimagequalityranking#egg=pyimq",  # To calculate the entropy of images.
    "adjustText",  # To adjust the location of text in the t-SNE CC embeddings.
]
denoise = [
    "n2v",
    "tensorflow==2.12.*",
]
dev = [
    "pre-commit", # For ensuring commits are of equal style.
    "sphinx", # For creating docs.
    "furo", # For styling docs.
    "numpydoc", # For handling Numpy-style docstrings.
]

[project.urls]
"Homepage" = "https://github.com/siemdejong/dpat"
"Bug Tracker" = "https://github.com/siemdejong/dpat/issues"
Changelog = "https://github.com/siemdejong/dpat/blob/main/CHANGELOG.md"

[project.scripts]
dpat = "dpat.cli:cli"

[tool.setuptools]
py-modules = []
packages = ["dpat"]

[tool.semantic_release]
version_variable = "dpat/__init__.py:__version__"
version_toml = ["pyproject.toml:project.version"]
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
upload_to_repository = false
build_command = "pip install build && python -m build"

[tool.docformatter]
syntax = "numpy"
black = true

[tool.isort]
profile = "black"

[tool.black]
skip-magic-trailing-comma = true
target-version = ["py310"]
