[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dpat"
version = "4.0.1"
authors = [
  {name="Siem de Jong", email="siem.dejong@hotmail.nl"},
]
description = "Deep Learning for Pathology on Higher Harmonic Generation Microscopy Images"
keywords = ["AI", "pathology", "HHG"]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10,<3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Unix",
    # "Topic :: Documentation :: Sphinx",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Physics",
    "Typing :: Typed",
]
dependencies = [
    # There is a bug with the jsonargparse that will otherwise be installed...
    "jsonargparse@git+https://github.com/omni-us/jsonargparse#egg=master",
    "dlup@git+https://github.com/siemdejong/dlup@entropy_masker",
    "scikit-learn >= 0.24",
    "click",
    "lightning[extra]>=2",
    "torch>=2",
    "lightly",
    "pandas",
    "tensorboard",
    "h5py",
    "ipywidgets",
    "pytorchcv", # For using prebuilt models.
]

[project.optional-dependencies]
masking-nb = [
    "geojson",
    "rasterio",
]

[project.urls]
"Homepage" = "https://github.com/siemdejong/dpat"
"Bug Tracker" = "https://github.com/siemdejong/dpat/issues"
Changelog = "https://github.com/siemdejong/dpat/blob/main/CHANGELOG.md"

[project.scripts]
dpat = "dpat.cli:cli"

[tool.setuptools]
py-modules = []
packages = ["dpat"]

[tool.semantic_release]
version_variable = "dpat/__init__.py:__version__"
version_toml = "pyproject.toml:project.version"
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
upload_to_repository = false
build_command = "pip install build && python -m build"

[tool.docformatter]
syntax = "numpy"
black = true

[tool.isort]
profile = "black"

[tool.black]
skip-magic-trailing-comma = true
language_version = "python3.9"
